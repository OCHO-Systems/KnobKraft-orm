Completely unprioritised list of things to do
=============================================

Before next release
+

BUGS
+ PatchButtons show subtitles only when there are two different synths, not when there is more than one selected
* Global settings needs to change MIDI channel internally when using the settings editor to change it
* When turning on a synth in the setup and it becomes active, the advanced filter dialog is wrong

STARTED FEATURES TO BE FINISHED AND ANNOUNCED
* Scripted Query
* Editor
* Audio prehear

Stability
+ Add minidump library to get crashes. Or even internet based feedback?
+ Crash reporting? https://partner.microsoft.com/en-us/dashboard/desktop/overview https://docs.microsoft.com/en-us/windows/win32/appxpkg/windows-desktop-application-program
  - https://support.backtrace.io/hc/en-us/articles/360040516131-Crashpad-Integration-Guide
  - https://partner.microsoft.com/en-US/dashboard/Account/CertificateUpload?accountprogram=win32&callbackUri=/en-US/dashboard/desktop/overview
  - https://drdump.com/crash-reporting-system
  - https://appcenter.ms/apps/create
+ Code signing
  - https://shop.globalsign.com/de-de/code-signing
  - https://secure.ssl.com/orders/new

OB-6
+ Implement parameter set of OB-6 for patch diff

RefaceDX
* Patch renaming
* Parameter set missing

Virus
* Patch renaming has to be implemented
* Parameter set missing

Rev2
* Support custom layering by allowing to combine layers to new patches, and by promoting B layers to A layers
* Sanitize tuning name before putting it into the database column (otherwise displays as "BLOB")
* Noteoff on send patch (or send mute patch first? Then I could also just ramp down program volume?)

K3
* Drawbar Organ Waveform Generator
* BCR2000 template for editing the wave
* Could render wave as Thumbnail
* Generic Oscillator shape optimizer? 
* Default name handling shaky
* Allow dependencies between DataFiles (patch -> wave for K3)

MKS80
* how to deal with tones and patches
* I guess just like the Wave in the K3?

BCR2000
* "Send to" is currently not send to edit buffer, as it will use whatever store command is in the BCL
* Send to should block UI, as you really shouldn't click again while it is still sending
* Need "cononical setup" for BCR2000 so it does not need to be reprogrammed when switching synths
* Could use bank list as preset list by querying bank names
* DIN MIDI will be slow now, need second strategy to send

Pro 3
+ Has 8 banks of 128 patches each, called U1-U4 and F1-F4, not 10 times 100 like the Pro 8 

Archiving
* Allow to open or create another database, so you could e.g. sort your patches into different databases. This would require another folder for the thumbnails?
+ Durability - also write all patches on the disk as individual patch files ready to send back to synth
* Manage Backup diskspace

Generic Module
+ Would need different "flavours" aka EditBufferCapability, ProgramDumpCabability, BankDumpCapability (Virus), StreamLoadCapability (RefaceDX), StreamDumpCapability (BCR2000), DataFileLoadCapability, HandshakeLoadingCapability (MKS80)
+ Could show which Flavours are implemented for each adaption (checkbox list)
+ Could create FlowChart to select which methods to implement!
+ Provide "orm" python package with denibble, DSI packing etc.
+ Could watch files and hot reload module when changed on disk (for easier development)
+ Could add "create new module" with skeleton file
+ Could add python editor with hot reload function

Macro page
* Somehow better feedback that a macro has been fired. Speech output? Amazon Polly? A Toast?
* Show on global level if macros on/off on a global level
* Also allow macros to work despite other keys being down (to switch while holding)
* Also allow sequences, not just chords

Patch display
* Allow "show patch" button as the simplified version of the patch diff dialog
* Allow side panel window to show always current patch paramters (like the diff dialog, just without the coloring. Also with hex dump option)

Librarian
* Allow recursive directory traversal during import
* Better display of bulk imports with real file source
* Could accept synth-initiated dumps at any time
* Could introduce collections/sessions/songs
* Better patch name display - the Rev2 patch names are too long. Make it two rows anyway (with two layers?)
* Make page number clickable to switch to that page, show less page numbers if these are really many
* Allow multi-select of banks to import (with all feature)
* Could have patch name autogenerator like LaserMammoth

Advanced Queries
* Needs better operators for comparing a PyTschirp attribute with int, bool so you don't have to type the get()
* Could hide the "p[]" by automatically adding it, could also automatically add the get()
* Should display syntax error in red under line
* Should fill page (fetching more pages until the page is full) - but how to do second page? This is always the problem with client side filtering. Simplest solution - fetch all from database and only then filter.
* Could add autocomplete? With drop down?
* Could use advanced query builder, where you select properties and enter them (that was called QBE at some point)

Global settings 
* Settings still sends out too many updates - should adapt dual listener strategy like in Editor
* Could show nice text instead of empty page

Alternate Tunings
* https://forum.sequential.com/index.php/topic,3468.0.html
* have you managed to change the slot number

Database schema
* Should have foreign key constraint imports.id == patches.sourceID
* Should have unique constraing imports.id (should edit buffer import contain synth name? could be scrambled by MD5?)
* Should have non-null everywhere
* Should think about naming convention
* Should create indexes where needed 

MIDI setup
* With more synths, should split "select synth" and "configure synth" into two columns
* Echo test - send a sysex, and see if this comes back (e.g. K3 or MKS80 repeating them). If yes, down prioritize those echos
* MIDI log needs a "save log function", and a "turn off" function
* Debounce is currently disabled - can I reenable it?

UI Cleanup
* Could add "patch diff" button to top row, always already reading "Compare with ..name of previous patch.."
* Could move LambdaButtonStrip to the very top (like a toolbar?)
* Synth selector goes below main tabs, as the MIDI log is global to all synths, and some future functions will be as well (Clock routing, master keyboard setup)

Big things
	* editor for the synth using the JUCE property editor/Dials. Could do custom layouts for editors (non-skeuomorphic)
	* Adding PyTschirp - for matters like Rev2 Sequencer Features, but also patch randomization, genetic algorithms. Could expose database queries to PyTschirp
	  * Could do targeted randomize - take only the search result as the base set, determine histograms/probability functions for each parameter
	* could sort by patch similarity
	* Adding full BCR2000 support
	* Adding spectrogram display, this needs to keep the current patch above the tab row!
	* Could add page for Synth "SuperPowers", i.e. features or UI that is Synth specific. 
	* Allow for free list of tags? This requires storing the tags properly in the database, I think, and allowing to delete no longer used tags.
	* Follow program change on synth so we know which patch is playing. This seems to be quite hard on the Rev2, as it does not send program change when set to NRPN transmit.
	  * Record notes played (duration) a specific patch
	  * Allow to sort by playing time
	* Synth_v2 class/interface more following the generic adaption design than the original Synth class	
	* Implement PatchBook Visualization
	* Patch randomizer
	* The automatic patch clusterer!
	* Automatic patch optimizer
	* MIDI routing (first only to and forth, then remapping channels, ...)
	* Clock routing screen
	* Interface into LaserMammoth devices? Can I execute Javascript?
	* Integrate with CTRLR? Can I host their panels? If yes, for what?
	* Can I synchronize multiple devices via the LaserMammoth Backend?
	* Could have voice input for naming patches? General voice control?
	* Should I use Amazon DynamoDB to synchronize multiple installations? Encryption?
	* VST version? If yes, why?

More synthesizers

	+ Behringer RD 8
	+ Novation Circuit

Requested on Reddit

	* Yamaha TX802
	* Yamaha AN1X

Librarian for other stuff (should rather do with adaption?)

	+ Meris pedal

